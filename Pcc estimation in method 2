import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
from datetime import datetime

# Print the current date and time
print(datetime.now())

# Read the CSV file into a DataFrame
df = pd.read_csv("/Users/data.csv")

# Initialize lists to store data for each patient
x = []  # List to store 'co' values
y = []  # List to store 'map' values
x_temp = []  # Temporary list for 'co' values
y_temp = []  # Temporary list for 'map' values
p_id = []  # List to store patient IDs

# Iterate over each row in the DataFrame
for i in range(len(df)):
    a = df['co'].iloc[i]  # Get 'co' value
    b = df['map'].iloc[i]  # Get 'map' value
    x_temp.append(a)  # Append 'co' value to temporary list
    y_temp.append(b)  # Append 'map' value to temporary list
    if (i % 13 == 12):  # Every 13th row (i.e., after 12 iterations)
        x.append(x_temp)  # Append collected 'co' values to main list
        y.append(y_temp)  # Append collected 'map' values to main list
        p_id.append(df['id'].iloc[i])  # Append patient ID
        x_temp = []  # Reset temporary 'co' list
        y_temp = []  # Reset temporary 'map' list

# Initialize lists to store regression coefficients and intercepts
all_k = []  # List to store slopes (coefficients)
all_b = []  # List to store intercepts

# Iterate over each patient's data
for i in range(len(p_id)):
    x_temp = x[i]  # 'co' values for the current patient
    y_temp = y[i]  # 'map' values for the current patient
    k_list = []  # Temporary list for slopes
    b_list = []  # Temporary list for intercepts
    # Iterate over each pair of consecutive data points
    for j in range(len(x_temp) - 1):
        x_i = [x_temp[j], x_temp[j+1]]  # Two consecutive 'co' values
        y_i = [y_temp[j], y_temp[j+1]]  # Two consecutive 'map' values
        x_i = np.array(x_i).reshape(-1, 1)  # Reshape for regression
        y_i = np.array(y_i).reshape(-1, 1)  # Reshape for regression
        reg = LinearRegression().fit(x_i, y_i)  # Fit linear model
        k_list.append(reg.coef_[0][0])  # Extract and store slope
        b_list.append(reg.intercept_[0])  # Extract and store intercept
    all_k.append(k_list)  # Store slopes for the current patient
    all_b.append(b_list)  # Store intercepts for the current patient

# Initialize lists to prepare data for the output DataFrame
p_id_list = []  # List to store patient IDs
kkk = []  # List to store slopes
bbb = []  # List to store intercepts
index = []  # List to store indices

# Flatten the lists to create a row for each regression result
for i in range(len(p_id)):
    for j in range(12):  # Assuming 12 regression results per patient
        p_id_list.append(p_id[i])  # Append patient ID
        kkk.append(all_k[i][j])  # Append slope
        bbb.append(all_b[i][j])  # Append intercept
        index.append(j + 1)  # Append index (1 to 12)

# Create a DataFrame to store the regression results
df1 = pd.DataFrame({
    'id': p_id_list,  # Patient ID
    'k': kkk,        # Slope (coefficient)
    'b': bbb,        # Intercept
    'index': index   # Index of the regression
})

# Save the regression results to a new CSV file
df1.to_csv("/Users/data1.csv", index=False)
